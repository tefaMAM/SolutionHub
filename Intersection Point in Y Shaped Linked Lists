class Intersect {
    // Function to find intersection point in Y shaped Linked Lists.
    int intersectPoint(Node head1, Node head2) {
        Node temp1 = head1;
        Node temp2 = head2;

        // Traverse both lists until we find the intersection point or reach the end
        while (temp1 != null && temp2 != null) {
            // Check if the two nodes are the same by reference (not by data)
            if (temp1 == temp2) {
                return temp1.data;
            }

            temp1 = temp1.next;
            temp2 = temp2.next;

            // If one list reaches the end, switch to the other list's head
            if (temp1 == null && temp2 != null) {
                temp1 = head2;
            }
            if (temp2 == null && temp1 != null) {
                temp2 = head1;
            }
        }

        // If there's no intersection, return -1
        return -1;
    }
}
